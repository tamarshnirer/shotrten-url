name: ci
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  job:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Build
        run: docker build -t test-image .

      - name: Run
        run: docker run --rm -d -p 8000:8000 --name test-container test-image

      - name: Install dependencies
        run: |
          python3 -m pip install --upgrade pip
          pip3 install -r requirements.txt
          pip3 install pytest

      - name: Tests
        run: |
          RUNNING_STATE=$(docker inspect -f '{{.State.Running}}' test-container)
          echo "Container state: $RUNNING_STATE"
          if [ "$RUNNING_STATE" == "true" ]; then
            echo "Container is running."
          else
            echo "Container is not running."
            exit 1
          fi
          python3 -m pytest tests.py
          sudo docker stop test-container

      - name: Fetch Latest Tag
        id: fetch_tag
        run: |
          latest_tag=$(docker pull tamarshnirer/shorten-url:latest | grep 'Status: Downloaded newer image' | awk -F ':' '{print $NF}')
          echo "latest_tag=$latest_tag" >> $GITHUB_ENV
          echo "Latest tag: $latest_tag"

      - name: Bump Version
        id: bump_version
        run: |
          current_version="${{ env.latest_tag }}"
          IFS='.' read -r -a version_parts <<< "$current_version"
          version_parts[2]=$((version_parts[2] + 1))
          new_version="${version_parts[0]}.${version_parts[1]}.${version_parts[2]}"
          echo "new_version=$new_version" >> $GITHUB_ENV
          echo "Current TAG: $current_version"
          echo "New Version: $new_version"

      - name: Sanitize new_version
        run: |
          sanitized_version=$(echo "${{ env.new_version }}" | tr -cd '[:alnum:].-_')
          sanitized_version=$(echo "$sanitized_version" | sed 's/^[.-]*//;s/[.-]*$//')
          echo "Sanitized version is: $sanitized_version"
          echo "SANITIZED_NEW_VERSION=$sanitized_version" >> $GITHUB_ENV

      - name: Print Environment Variables
        run: |
          echo "Current TAG is: ${{ env.latest_tag }}"
          echo "new_version from GITHUB_ENV is: ${{ env.new_version }}"
          echo "SANITIZED_NEW_VERSION is: ${{ env.SANITIZED_NEW_VERSION }}"

      - name: Renaming the image with the sanitized version
        run: |
          echo "Renaming image to tamarshnirer/shorten-url:${{ env.SANITIZED_NEW_VERSION }}"
          docker tag test-image:latest tamarshnirer/shorten-url:${{ env.SANITIZED_NEW_VERSION }}

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: tamarshnirer
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Push image with new tag
        run: docker push tamarshnirer/shorten-url:${{ env.SANITIZED_NEW_VERSION }}

      - name: Checkout Target Repository
        uses: actions/checkout@v4
        with:
          repository: tamarshnirer/example-gitops
          token: ${{ secrets.TARGET_REPO_TOKEN }}
          path: example-gitops

      - name: Update Deployment File
        run: |
          cd example-gitops
          NEW_IMAGE="tamarshnirer/shorten-url:${{ env.SANITIZED_NEW_VERSION }}"
          sed -i "s|image: .*|image: ${NEW_IMAGE}|" shorten-url-dep.yaml
          cat shorten-url-dep.yaml

      - name: Commit and Push Changes
        run: |
          cd example-gitops
          git config user.name 'github-actions'
          git config user.email 'actions@github.com'
          git add shorten-url-dep.yaml
          git status
          git commit -m 'Update deployment image' || echo "No changes to commit"
          git push origin main

      - name: Install GitHub CLI
        run: sudo apt-get install gh

      - name: Update Github Secret
        uses: NikhilVashistha/update-github-action-secret@v1.0.3
        with:
          github_token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
          secret_name: TAG
          secret_value: ${{ env.new_version }}
          variable: false
