name: ci
on: 
  push:
    branches: 
      - main
  pull_request:
    branches:
      - main

jobs:
  job:
    runs-on: ubuntu-latest
    env:
      TAG: ${{ secrets.TAG }}

    steps:
      - name: Checkout Code 
        uses: actions/checkout@v4

      - name: Build 
        run: docker build -t test-image .

      - name: Run
        run: docker run --rm -d -p 8000:8000 --name test-container test-image

      - name: Install dependencies
        run: |
          python3 -m pip install --upgrade pip
          pip3 install -r requirements.txt
          pip3 install pytest

      - name: Tests
        run: |
          RUNNING_STATE=$(docker inspect -f '{{.State.Running}}' test-container)
          echo "Container state: $RUNNING_STATE"
          if [ "$RUNNING_STATE" == "true" ]; then
            echo "Container is running."
          else
            echo "Container is not running."
            exit 1
          fi
          python3 -m pytest tests.py
          sudo docker stop test-container

      - name: Bump version
        id: bump_version
        run: |
          current_version=${{ env.TAG }}
          IFS='.' read -r -a version_parts <<< "$current_version"
          version_parts[2]=$((version_parts[2] + 1))
          new_version="${version_parts[0]}.${version_parts[1]}.${version_parts[2]}"
          echo "new_version=$new_version" >> $GITHUB_ENV

      - name: Display new version
        run: echo "The new version is ${{ env.new_version }}"

      - name: Build image with new version
        run: docker build -t tamarshnirer/shorten-url:${{ env.new_version }} .

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: tamarshnirer
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Push image with new tag
        run: docker push tamarshnirer/shorten-url:${{ env.new_version }}
